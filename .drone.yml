kind: pipeline
type: docker
name: default
steps:
    - name: restore-cache #恢复缓存
      image: drillster/drone-volume-cache
      pull: if-not-exists
      volumes:
          - name: cache
            path: /cache
      settings:
          restore: true
          mount:
              - ./node_modules
              - .pnpm-store/v3
    - name: build
      image: node:16
      pull: if-not-exists
      commands:
          - npm i -g pnpm
          - pnpm install --no-frozen-lockfile
          - pnpm build
          - echo 打包成功...
    - name: rebuild-cache #重建缓存
      image: drillster/drone-volume-cache
      pull: if-not-exists
      volumes:
          - name: cache
            path: /cache
      settings:
          rebuild: true
          mount:
              - ./node_modules
              - ./.pnpm-store/v3
    - name: docker
      image: plugins/docker
      pull: if-not-exists
      settings:
          repo: hurole/vue3-admin
          username:
              from_secret: docker_user
          password:
              from_secret: docker_pwd
          auto_tag: true
---
kind: pipeline
type: docker
name: deployment
steps:
    # - name: deploy
    #   image: docker:dind
    #   volumes:
    #       - name: dockersock
    #         path: /var/run/docker.sock
    #   commands:
    #       - docker stop vue
    #       - docker rm vue
    #       - docker run -d --name vue --restart always -p 80:80 hurole/vue3-admin:latest
    #       - docker ps -a
    # - name: deploy
    #   image: appleboy/drone-ssh
    #   settings:
    #     host: 192.168.1.30
    #     username: root
    #     password: 123456
    #     port: 22
    #     command_timeout: 2m
    #     script:
    #         - cd /root/vue3-admin
    #         - git pull
    - name: deploy
      image: appleboy/drone-scp
      settings:
        host: 192.168.1.30
        username: root
        password: 123456
        port: 22
        command_timeout: 5m
        overwrite: true
        target: /usr/share/nginx/html
        source: dist
volumes:
    - name: dockersock
      host:
          path: /var/run/docker.sock
    - name: cache
      host:
          path: /tmp/cache
trigger:
    branch:
        include:
            - main
    event:
        include:
            - cron
            - custom
